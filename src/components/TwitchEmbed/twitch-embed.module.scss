@use 'sass:math';
@use '../../colors';

$width: 32rem;
$player-button-gap: 1rem;
$button-height: 2rem;

.place {
  margin-top: 4rem;
  width: $width;
  height: calc(#{$width * math.div(9, 16)} + $player-button-gap + $button-height);
}

.wrapper {
  position: absolute;
  top: 4rem + 4rem;
  left: 50%;
  width: $width;
  height: calc(#{$width * math.div(9, 16)} + $player-button-gap + $button-height);

  transform: translateX(-50%) translateY(0);

  z-index: 0;

  $size-timing-function: cubic-bezier(.4, 0, .2, 1);

  &, .blocker, .player, .warning {
    $size-timing: cubic-bezier(.4, 0, .2, 1);
    $duration: .4s;
    transition: height #{$duration}, width #{$duration}, transform #{$duration}, box-shadow .5s, z-index #{$duration};
    transition-timing-function: #{$size-timing-function}, #{$size-timing-function}, #{$size-timing-function}, #{$size-timing-function}, step-end;
  }

  .blocker {
    box-shadow: 0 0 0 transparentize(black, .5);
  }

  &.scaled {
    $max-width: calc(100vw - 4rem);
    $max-height: calc(100vh - 4rem);
    $width-scaled: min(#{$max-width}, calc(calc(#{$max-height} - $player-button-gap - $button-height) * (16 / 9)));
    $height-scaled: min(#{$max-height}, calc(#{$max-width} * (9 / 16) + $player-button-gap + $button-height));
    width: $width-scaled;
    height: $height-scaled;
    transform: translateX(-50%) translateY(calc(0rem - 4rem - 4rem + 2rem));
    transition-timing-function: #{$size-timing-function}, #{$size-timing-function}, #{$size-timing-function}, #{$size-timing-function}, step-start;

    z-index: 1;

    .blocker {
      box-shadow: 0 0 3rem transparentize(black, .3);
    }

    .blocker, .player, .warning {
      width: $width-scaled;
      height: calc(#{$width-scaled} * (9 / 16));
    }
  }

  .blocker {
    position: absolute;
    top: 0;
    width: $width;
    height: $width * math.div(9, 16);
    box-sizing: border-box;

    background: colors.$black;
    border: 4px solid transparentize(colors.$egg, .9);

    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;

    span {
      animation: fade-in .5s 2s ease both;
    }

    @keyframes fade-in {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
  }

  .player {
    position: absolute;
    top: 0;
    width: $width;
    height: $width * math.div(9, 16);
    border: none;
  }

  .expand {
    position: absolute;
    bottom: 0;
    right: 0;
    height: $button-height;

    font-size: .7rem;
    letter-spacing: .1ch;

    .icon {
      font-size: 1rem;
    }
  }

  .warning {
    position: absolute;
    top: 0;
    width: $width;
    height: $width * math.div(9, 16);
    box-sizing: border-box;
    $padding: 2rem;
    padding: $padding max($padding, calc((100% - (#{$width} - #{$padding} * 2)) / 2));

    background: colors.$egg;
    color: colors.$black;
    font-weight: 500;

    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: .5rem;

    > * {
      margin: 0;
    }

    h2 {
      font-family: 'Konstruktor', serif;
      font-size: 3rem;
      color: colors.$red;
      margin: 0 0 .5rem;
    }

    label {
      position: relative;
      display: flex;
      align-items: center;
      gap: .5rem;
      cursor: pointer;
    }

    $check-size: 1.5rem;

    .check {
      appearance: none;
      background: colors.$black;
      border: none;
      width: $check-size;
      height: $check-size;
      margin: 0;

      cursor: pointer;

      &:checked {
        background: colors.$red;

        + .checkmark {
          visibility: visible;
        }
      }
    }

    .checkmark {
      position: absolute;
      left: math.div($check-size, 2);
      transform: translateX(-50%);

      visibility: hidden;

      * {
        fill: colors.$egg;
      }
    }

    .button {
      align-self: end;
    }
  }
}
